# Qleverfile for OHM Planet, use with https://github.com/ad-freiburg/qlever-control
#
# qlever get-data  # ~20 mins (download PBF, convert to TTL, add GeoSPARQL triples)
# qlever index     # ~20 mins and ~5 GB RAM (on an AMD Ryzen 9 5900X)
# qlever start     # ~1 sec
#
# For `qlever get-data` to work, `osm2rdf` must be installed and in the `PATH`.

[data]
NAME           = ohm-planet
GET_DATA_URL   = https://planet.openhistoricalmap.org/planet
CHECK_BINARIES = osm2rdf -h > /dev/null || (echo "osm2rdf not found, make sure that it's installed and in your PATH" && exit 1)
GET_DATA_CMD_1 = curl -LRfC - -o ${NAME}.pbf $$(curl -s ${GET_DATA_URL}/state.txt) 2>&1 | tee ${NAME}.download-log.txt
GET_DATA_CMD_2 = osm2rdf ${NAME}.pbf -o ${NAME}.ttl --source-dataset OHM --cache . --add-hascentroid 2>&1 | tee ${NAME}.osm2rdf-log.txt
GET_DATA_CMD   = set -o pipefail && ${CHECK_BINARIES} && ${GET_DATA_CMD_1} && echo && ${GET_DATA_CMD_2}
VERSION        = $$(date -r ${NAME}.pbf +%d.%m.%Y || echo "NO_DATE")
DESCRIPTION    = OHM Planet, data from ${GET_DATA_URL} version ${VERSION} (with GeoSPARQL predicates ogc:sfContains and ogc:sfIntersects)

[index]
INPUT_FILES      = ${data:NAME}.ttl.bz2
CAT_INPUT_FILES  = bzcat -f ${INPUT_FILES}
SETTINGS_JSON    = { "prefixes-external": [""], "ascii-prefixes-only": false, "parallel-parsing": true, "num-triples-per-batch": 5000000 }

[server]
PORT                        = 7037
ACCESS_TOKEN                = ${data:NAME}
MEMORY_FOR_QUERIES          = 10G
CACHE_MAX_SIZE              = 5G
CACHE_MAX_SIZE_SINGLE_ENTRY = 4G
WARMUP_CMD                  = curl -s https://qlever.cs.uni-freiburg.de/mapui-petri/query --data-urlencode "query=PREFIX geo: <http://www.opengis.net/ont/geosparql#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX osm: <https://www.openstreetmap.org/> SELECT ?osm_id ?geometry WHERE { ?osm_id geo:hasGeometry/geo:asWKT ?geometry . ?osm_id rdf:type osm:node } LIMIT 1" --data-urlencode "backend=https://qlever.cs.uni-freiburg.de/api/${data:NAME}" > /dev/null

[runtime]
SYSTEM = docker
IMAGE  = adfreiburg/qlever:latest

[ui]
CONFIG = ohm-planet
