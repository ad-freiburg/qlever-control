# Qleverfile for IMDB, use with https://github.com/ad-freiburg/qlever-control
#
# qlever get-data  # downloads "basics" and "ratings" of size ~1 GB
# qlever index     # takes ~5 minutes and ~5 GB RAM (on an AMD Ryzen 9 5900X)
# qlever start     # starts the server (takes a few seconds)
#
# Supports fast kewyword search in literals (WITH_TEXT_INDEX = from_literals).

[data]
NAME             = imdb
IMDB_DATA_URL    = https://datasets.imdbws.com
GET_PREFIXES     = echo "@prefix imdb: <https://www.imdb.com/> ."
GET_IMDB_BASICS  = FILE=title.basics.tsv.gz; curl -sLO -C - ${IMDB_DATA_URL}/$${FILE}; zcat $${FILE} | sed 1d | awk -F'\t' '{ gsub("\\\\", "\\\\", $$3); gsub("\"", "\\\"", $$3); printf "imdb:%s imdb:id \"%s\" ; imdb:type \"%s\" ; imdb:title \"%s\" .\n", $$1, $$1, $$2, $$3 }'; rm -f $${FILE}
GET_IMDB_RATINGS = FILE=title.ratings.tsv.gz; curl -sLO -C - ${IMDB_DATA_URL}/$${FILE}; zcat $${FILE} | sed 1d | awk -F'\t' '{ printf "imdb:%s imdb:averageRating %s ; imdb:numVotes %s .\n", $$1, $$2, $$3 }'; rm -f $${FILE}
GET_DATA_CMD     = (${GET_PREFIXES}; ${GET_IMDB_BASICS}; ${GET_IMDB_RATINGS}) > ${NAME}.ttl
DESCRIPTION      = RDF data derived from ${IMDB_DATA_URL}
TEXT_DESCRIPTION = All literals, search with FILTER CONTAINS(?var, "...")

[index]
INPUT_FILES     = ${data:NAME}.ttl
CAT_INPUT_FILES = cat ${INPUT_FILES}
SETTINGS_JSON   = { "ascii-prefixes-only": false, "num-triples-per-batch": 1000000 }
TEXT_INDEX      = from_literals

[server]
PORT               = 7029
ACCESS_TOKEN       = ${data:NAME}
MEMORY_FOR_QUERIES = 5G

[runtime]
SYSTEM = docker
IMAGE  = docker.io/adfreiburg/qlever:latest

[ui]
UI_CONFIG = imdb
